C51 COMPILER V8.18   MEMORY_TEST                                                           10/06/2014 22:10:14 PAGE 1   


C51 COMPILER V8.18, COMPILATION OF MODULE MEMORY_TEST
OBJECT MODULE PLACED IN memory_test.OBJ
COMPILER INVOKED BY: C:\Keil8051\C51\BIN\C51.EXE memory_test.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "memory_test.h"
   2          
   3          static unsigned char code code_mem[]="This is a test of a string in code memory";
   4          static unsigned char xdata xdata_mem[50];
   5          
   6          /***********************************************************************
   7          DESC:  Returns the pointer to a string in code memory
   8          INPUT: global string definition
   9          RETURNS: pointer to the global string definition
  10          CAUTION: 
  11          ************************************************************************/
  12          unsigned char * code_memory_init(void)
  13          {
  14   1         return code_mem;
  15   1      }
  16          
  17          
  18          /***********************************************************************
  19          DESC:  Copies a string of characters from code memory to xram
  20          INPUT: uses two global pointers defined above
  21          RETURNS: pointer to the string in xdata memory
  22          CAUTION: 
  23          ************************************************************************/
  24          unsigned char * xdata_memory_init(void)
  25          {
  26   1         unsigned char index, value;
  27   1         
  28   1         
  29   1         for(index=0;index<30;index++)
  30   1         {
  31   2             value=code_mem[index];
  32   2             xdata_mem[index]=value;
  33   2         }
  34   1         xdata_mem[30]='x';
  35   1         xdata_mem[31]='d';
  36   1         xdata_mem[32]='a';
  37   1         xdata_mem[33]='t';
  38   1         xdata_mem[34]='a'; 
  39   1         for(index=34;index<41;index++)
  40   1         {
  41   2             value=code_mem[index];
  42   2             xdata_mem[index+1]=value;
  43   2         }
  44   1      
  45   1         return xdata_mem;
  46   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     84    ----
   CONSTANT SIZE    =     42    ----
   XDATA SIZE       =     50    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V8.18   MEMORY_TEST                                                           10/06/2014 22:10:14 PAGE 2   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
